{"version":3,"sources":["components/displayweather.js","components/navbar.js","App.js","index.js"],"names":["Displayweather","props","city","country","description","icon","temp","feelLike","minTemp","maxTemp","pressure","humidity","windSpeed","getIcon","className","Math","floor","src","alt","Navbar","handleCity","getWeather","type","required","placeholder","onChange","e","target","value","onClick","App","useState","longitude","setLongitude","latitude","setLatitude","setCity","setCountry","weatherData","setWeatherData","setDescription","setTemp","setFeelLike","setMinTemp","setMaxTemp","setPressure","setHumidity","setWindSpeed","setIcon","useEffect","navigator","geolocation","getCurrentPosition","position","coords","Axios","get","then","res","data","name","weather","main","feels_like","temp_min","temp_max","wind","speed","sys","console","log","u","preventDefault","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35c094f7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nexport default function Displayweather(props) {\n  const {\n    city,\n    country,\n    description,\n    icon,\n    temp,\n    feelLike,\n    minTemp,\n    maxTemp,\n    pressure,\n    humidity,\n    windSpeed,\n  } = props;\n\n  var getIcon = \"http://openweathermap.org/img/wn/\" + icon + \".png\";\n\n  return (\n    <div className=\"container mt-5 card display\">\n      <div className=\"row mt-4 \">\n        <div className=\"col-3 text-center \">\n          <h2>\n            {Math.floor(temp - 273)}\n            <sup>0</sup>C ,{description}\n          </h2>\n          <h5>\n            Feels like {Math.floor(feelLike - 273)}\n            <sup>0</sup>C\n          </h5>\n          <h6>\n            {city},{country}\n          </h6>\n        </div>\n        <div className=\"col-9 px-1 py-2\">\n          <img src={getIcon} alt=\"Weather\" className=\"icon\" />\n        </div>\n      </div>\n      <div className=\"row  my-5 text-center \">\n        <div className=\"col-3\">\n          <div>\n            Wind Speed <b>(m/sec)</b>\n          </div>\n          <div>{windSpeed}</div>\n        </div>\n        <div className=\"col-3\">\n          <div>\n            Pressure <b>(hPa)</b>\n          </div>\n          <div>{pressure}</div>\n        </div>\n        <div className=\"col-3\">\n          <div>\n            High/Low{\" \"}\n            <b>\n              <sup>0</sup>C\n            </b>\n          </div>\n          <div>\n            {Math.floor(minTemp - 273)}/{Math.floor(maxTemp - 273)}\n          </div>\n        </div>\n        <div className=\"col-3\">\n          <div>\n            Humidity <b>(%)</b>\n          </div>\n          <div>{humidity}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\r\n\r\nexport default function Navbar(props) {\r\n  const { handleCity, getWeather } = props;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row container-fluid pt-4 mx-4\">\r\n        <h3 className=\"text-black  col-6 pl-4\">\r\n          <u>Weather App</u>\r\n        </h3>\r\n        <form className=\" row col-6 justify-content-end text-white\">\r\n          <div className=\"col-4 md-2\">\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              className=\"form-control bg-black border-0 rounded-5 border-secondary text-black \"\r\n              placeholder=\"Enter City\"\r\n              onChange={(e) => handleCity(e.target.value)}\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"btn btn-success md-2\"\r\n            onClick={(e) => getWeather(e)}\r\n          >\r\n            Get Weather\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport Displayweather from \"./components/displayweather\";\nimport Navbar from \"./components/navbar\";\nimport \"./app.css\";\nimport Axios from \"axios\";\n\nfunction App() {\n  const [longitude, setLongitude] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n\n  const [weatherData, setWeatherData] = useState(null);\n\n  const [description, setDescription] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  const [feelLike, setFeelLike] = useState(\"\");\n  const [minTemp, setMinTemp] = useState(\"\");\n  const [maxTemp, setMaxTemp] = useState(\"\");\n  const [pressure, setPressure] = useState(\"\");\n  const [humidity, setHumidity] = useState(\"\");\n  const [windSpeed, setWindSpeed] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n\n  useEffect(() => {\n    //to get device location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setLatitude(position.coords.latitude);\n        setLongitude(position.coords.longitude);\n\n        Axios.get(\n          `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=51439367c5b9c7c0362dac66df3dab7d`\n        ).then((res) => {\n          setWeatherData(res.data);\n\n          setCity(res.data.name);\n          setDescription(res.data.weather[0].main);\n          setIcon(res.data.weather[0].icon);\n          setTemp(res.data.main.temp);\n          setFeelLike(res.data.main.feels_like);\n          setMinTemp(res.data.main.temp_min);\n          setMaxTemp(res.data.main.temp_max);\n          setPressure(res.data.main.pressure);\n          setHumidity(res.data.main.humidity);\n          setWindSpeed(res.data.wind.speed);\n          setCountry(res.data.sys.country);\n        });\n      });\n    } else {\n      console.log(\"geolocation not supported\");\n    }\n  }, [latitude, longitude]);\n\n  const handleCity = (u) => {\n    setCity(u);\n  };\n\n  const getWeather = (e) => {\n    e.preventDefault();\n    if (city === \"\") {\n      alert(\"Enter City\");\n    } else {\n      Axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=51439367c5b9c7c0362dac66df3dab7d`\n      ).then((res) => {\n        setWeatherData(res.data);\n\n        setCity(res.data.name);\n        setDescription(res.data.weather[0].main);\n        setIcon(res.data.weather[0].icon);\n        setTemp(res.data.main.temp);\n        setFeelLike(res.data.main.feels_like);\n        setMinTemp(res.data.main.temp_min);\n        setMaxTemp(res.data.main.temp_max);\n        setPressure(res.data.main.pressure);\n        setHumidity(res.data.main.humidity);\n        setWindSpeed(res.data.wind.speed);\n        setCountry(res.data.sys.country);\n      });\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Navbar handleCity={handleCity} getWeather={getWeather} />\n      <div className=\"cardDesign\">\n        {weatherData ? (\n          <Displayweather\n            city={city}\n            country={country}\n            description={description}\n            icon={icon}\n            temp={temp}\n            feelLike={feelLike}\n            minTemp={minTemp}\n            maxTemp={maxTemp}\n            pressure={pressure}\n            humidity={humidity}\n            windSpeed={windSpeed}\n          />\n        ) : (\n          <h2>loading....</h2>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}